buildscript {
    ext.kotlin_version = '1.2.21'
    repositories {
        jcenter() // Bintray's repository - a fast Maven Central mirror & more
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:+"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war' // Standard Web Archive plugin
apply plugin: 'com.google.cloud.tools.appengine' // App Engine tasks
apply plugin: 'org.jetbrains.dokka' // Generating KDocs

jar {
    baseName = 'gs-serving-web-content'
    version =  '0.1.0'
}

war {
    exclude('**/dev-sam-frontend/**')
}

repositories {
    maven {
        url 'https://maven-central.storage.googleapis.com'
        // Google's mirror of Maven Central
    }
    jcenter()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile("junit:junit:+")
    // Servlet Support
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api',
            version: '3.1.0'
    // App Engine API
    compile 'com.google.appengine:appengine:+'
    compile 'com.google.appengine:appengine-api-1.0-sdk:+'
    // App Engine ML API
    compile 'com.google.cloud:google-cloud-language:+'
    // Firebase
    compile 'com.google.firebase:firebase-admin:+'
    // Add your dependencies here.
    // GSON, for parsing and generating JSON
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'org.danilopianini', name: 'gson-extras', version: '0.2.1'
    // Google's Java Library
    compile 'com.google.guava:guava:23.5-jre'
    // Logging
    compile("org.slf4j:slf4j-api:+")
    compile("org.slf4j:jcl-over-slf4j:+")
    compile("org.slf4j:slf4j-log4j12:+")
    compile("log4j:log4j:+")
}

appengine {
    // App Engine tasks configuration
    run {
        // local (dev_appserver) configuration (standard environments only)
        port = 8080 // default
        jvmFlags = ["-Dappengine.fullscan.seconds=5"]
    }

    deploy {   // deploy configuration
        stopPreviousVersion = true  // default - stop the current version
        promote = true              // default - & make this the current version
    }
}

dokka {
    moduleName = 'Developer Sam Website'
    outputFormat = 'html'
    outputDirectory = "$buildDir/kdoc"
    jdkVersion = 8
    reportNotDocumented = false
    skipDeprecated = false
    skipEmptyPackages = true
    impliedPlatforms = ['JVM']
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

group 'com.developersam.web'
version '3.0.0'

sourceCompatibility = 1.8  // App Engine Standard uses Java 8
targetCompatibility = 1.8  // App Engine Standard uses Java 8

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
